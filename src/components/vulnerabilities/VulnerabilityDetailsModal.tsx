import { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle } from "@/components/ui/dialog";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { Separator } from "@/components/ui/separator";
import { AlertTriangle, Package, Calendar, ExternalLink, Shield, Activity } from "lucide-react";

interface VulnerabilityDetailsModalProps {
  open: boolean;
  onOpenChange: (open: boolean) => void;
  vulnerability: {
    id: string;
    title: string;
    severity: string;
    cvss: number;
    repository: string;
    repositoryId: string;
    platform: string;
    package: string;
    version: string;
    fixedIn: string;
    status: string;
    discoveredDate: string;
    description: string;
  } | null;
}

const getSeverityColor = (severity: string) => {
  switch (severity.toLowerCase()) {
    case 'critical': return 'destructive';
    case 'high': return 'destructive';
    case 'medium': return 'secondary';
    case 'low': return 'outline';
    default: return 'outline';
  }
};

const getCVSSColor = (cvss: number) => {
  if (cvss >= 9) return 'text-red-600';
  if (cvss >= 7) return 'text-orange-600';
  if (cvss >= 4) return 'text-yellow-600';
  return 'text-green-600';
};

const getStatusColor = (status: string) => {
  switch (status.toLowerCase()) {
    case 'resolved': return 'default';
    case 'in-progress': return 'secondary';
    case 'open': return 'destructive';
    default: return 'outline';
  }
};

export function VulnerabilityDetailsModal({ open, onOpenChange, vulnerability }: VulnerabilityDetailsModalProps) {
  if (!vulnerability) return null;

  return (
    <Dialog open={open} onOpenChange={onOpenChange}>
      <DialogContent className="max-w-2xl max-h-[80vh] overflow-y-auto">
        <DialogHeader>
          <DialogTitle className="flex items-start gap-3 text-left">
            <AlertTriangle className="h-5 w-5 text-destructive mt-0.5 flex-shrink-0" />
            <div className="flex-1">
              <div className="pr-8">{vulnerability.title}</div>
              <div className="flex items-center gap-2 mt-2">
                <Badge variant={getSeverityColor(vulnerability.severity)}>
                  {vulnerability.severity.toUpperCase()}
                </Badge>
                <Badge variant="outline" className={`${getCVSSColor(vulnerability.cvss)} border-current`}>
                  CVSS {vulnerability.cvss}
                </Badge>
                <Badge variant={getStatusColor(vulnerability.status)}>
                  {vulnerability.status.toUpperCase()}
                </Badge>
              </div>
            </div>
          </DialogTitle>
          <DialogDescription className="text-left">
            Vulnerability ID: <code className="bg-muted px-1 py-0.5 rounded text-xs">{vulnerability.id}</code>
          </DialogDescription>
        </DialogHeader>

        <div className="space-y-6">
          {/* Description */}
          <div>
            <h3 className="font-semibold mb-2 flex items-center gap-2">
              <Shield className="h-4 w-4" />
              Description
            </h3>
            <p className="text-sm text-muted-foreground leading-relaxed">
              {vulnerability.description}
            </p>
          </div>

          <Separator />

          {/* Package Information */}
          <div>
            <h3 className="font-semibold mb-3 flex items-center gap-2">
              <Package className="h-4 w-4" />
              Package Information
            </h3>
            <div className="grid grid-cols-2 gap-4 text-sm">
              <div>
                <span className="font-medium text-muted-foreground">Package:</span>
                <p className="font-mono bg-muted px-2 py-1 rounded mt-1">{vulnerability.package}</p>
              </div>
              <div>
                <span className="font-medium text-muted-foreground">Current Version:</span>
                <p className="font-mono bg-muted px-2 py-1 rounded mt-1">{vulnerability.version}</p>
              </div>
              <div>
                <span className="font-medium text-muted-foreground">Fixed In:</span>
                <p className="font-mono bg-green-50 border border-green-200 px-2 py-1 rounded mt-1 text-green-800">
                  {vulnerability.fixedIn}
                </p>
              </div>
              <div>
                <span className="font-medium text-muted-foreground">Platform:</span>
                <p className="font-mono bg-muted px-2 py-1 rounded mt-1">{vulnerability.platform}</p>
              </div>
            </div>
          </div>

          <Separator />

          {/* Repository Information */}
          <div>
            <h3 className="font-semibold mb-3 flex items-center gap-2">
              <Activity className="h-4 w-4" />
              Repository Information
            </h3>
            <div className="text-sm space-y-2">
              <div>
                <span className="font-medium text-muted-foreground">Repository:</span>
                <p className="font-mono bg-muted px-2 py-1 rounded mt-1">{vulnerability.repository}</p>
              </div>
              <div>
                <span className="font-medium text-muted-foreground">Discovered:</span>
                <p className="flex items-center gap-2 mt-1">
                  <Calendar className="h-3 w-3" />
                  {new Date(vulnerability.discoveredDate).toLocaleDateString('en-US', {
                    year: 'numeric',
                    month: 'long',
                    day: 'numeric'
                  })}
                </p>
              </div>
            </div>
          </div>

          <Separator />

          {/* CVSS Score Details */}
          <div>
            <h3 className="font-semibold mb-3 flex items-center gap-2">
              <Shield className="h-4 w-4" />
              CVSS Score Details
            </h3>
            <div className="bg-muted p-4 rounded-lg">
              <div className="flex items-center justify-between mb-2">
                <span className="text-sm font-medium">CVSS Score</span>
                <span className={`text-lg font-bold ${getCVSSColor(vulnerability.cvss)}`}>
                  {vulnerability.cvss}/10
                </span>
              </div>
              <div className="w-full bg-gray-200 rounded-full h-2">
                <div 
                  className={`h-2 rounded-full ${
                    vulnerability.cvss >= 9 ? 'bg-red-600' :
                    vulnerability.cvss >= 7 ? 'bg-orange-600' :
                    vulnerability.cvss >= 4 ? 'bg-yellow-600' : 'bg-green-600'
                  }`}
                  style={{ width: `${vulnerability.cvss * 10}%` }}
                ></div>
              </div>
              <p className="text-xs text-muted-foreground mt-2">
                CVSS (Common Vulnerability Scoring System) rates vulnerabilities from 0-10, where 10 is most severe.
              </p>
            </div>
          </div>

          {/* Action Buttons */}
          <div className="flex gap-3 pt-2">
            <Button
              variant="outline"
              className="flex-1"
              asChild
            >
              <a 
                href={`https://nvd.nist.gov/vuln/detail/${vulnerability.id}`}
                target="_blank"
                rel="noopener noreferrer"
              >
                <ExternalLink className="h-4 w-4 mr-2" />
                View in NVD Database
              </a>
            </Button>
            <Button
              variant="outline"
              className="flex-1"
              asChild
            >
              <a 
                href={`https://github.com/${vulnerability.repository}`}
                target="_blank"
                rel="noopener noreferrer"
              >
                <ExternalLink className="h-4 w-4 mr-2" />
                View Repository
              </a>
            </Button>
          </div>
        </div>
      </DialogContent>
    </Dialog>
  );
}